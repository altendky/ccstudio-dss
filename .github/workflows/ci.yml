name: CI

on:
  push:
    branches:
      - develop
    tags:
      - v*
  pull_request:
    branches:
      - "*"

jobs:
  ci:
    name: ${{ matrix.os.name }} ${{ matrix.python.name }}-${{ matrix.bitness.name }} ${{ matrix.qt.pyqt_version }}
    runs-on: ${{ matrix.os.runs-on }}
    container: ${{ format(matrix.os.container, matrix.python.docker) }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Linux
            runs-on: ubuntu-latest
            python_platform: linux
            container: docker://python:{0}-buster
        python:
          - name: 3.9
            docker: 3.9
        bitness:
#          - name: x32
#            action: x86
#            cibuildwheel: '*32*'
          - name: x64
            action: x64
            cibuildwheel: '*64*'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: pip/setuptools/wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel pep517
      - name: Report info
        shell: bash
        run: |
          git show --quiet HEAD
          python --version --version
          pip --version
          pip list
          pip freeze --all
          python -c "import sysconfig; print('Py_ENABLE_SHARED -> {}'.format(sysconfig.get_config_var('Py_ENABLE_SHARED')))"
      - name: Build wheel
        # native shell for nmake...  keep commands here simple i guess
        run: |
          python -m pep517.build --binary --source .
      - name: Set WHEEL_PATH
        shell: python
        run: |
          import os
          import pathlib

          fspath = getattr(os, 'fspath', str)

          dist = pathlib.Path.cwd() / 'dist'
          [wheel] = dist.glob('*.whl')

          with open(os.environ['GITHUB_ENV'], 'a') as github_env:
              github_env.write('WHEEL_PATH={}\n'.format(fspath(wheel)))
              github_env.write('WHEEL_STEM={}\n'.format(wheel.stem))
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist
  maybe_publish:
    name: Maybe Publish
    runs-on: ubuntu-latest
    container: docker://python:3.8-buster
    needs:
      - ci
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download all wheels
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: dist
      - name: Install Python packages
        run: |
          pip install --upgrade twine
      - name: Maybe publish
        run: |
          python twineontag.py
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  all:
    name: All
    runs-on: ubuntu-latest
    needs:
      - ci
      - maybe_publish
    steps:
      - name: This
        shell: python
        run: |
          import this
